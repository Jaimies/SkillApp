plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.android.gms.oss-licenses-plugin'
    id 'io.gitlab.arturbosch.detekt' version '1.5.0'
}

android {
    kotlinOptions.jvmTarget = '11'

    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }

    signingConfigs {
        release {
            storeFile = file(Signing.keyPath)
            storePassword = Signing.storePassword
            keyAlias = Signing.keyAlias
            keyPassword = Signing.keyPassword
        }
    }

    compileSdkVersion App.compileSdk
    buildToolsVersion App.buildTools

    defaultConfig {
        applicationId App.applicationId
        minSdkVersion App.minSdk
        targetSdkVersion App.targetSdk
        versionCode App.versionCode
        versionName App.versionName
        testInstrumentationRunner "com.maxpoliakov.skillapp.screenshots.CustomTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled = true
            shrinkResources = true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig = signingConfigs.release
            resValue("bool", "FIREBASE_ANALYTICS_DEACTIVATED", "false")
            resValue("bool", "FIREBASE_CRASH_ENABLED", "true")
        }
        debug {
            multiDexEnabled = true
            ext.enableCrashlytics = false
            resValue("bool", "FIREBASE_ANALYTICS_DEACTIVATED", "true")
            resValue("bool", "FIREBASE_CRASH_ENABLED", "false")
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }

    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES', 'META-INF/LICENSE', 'META-INF/LICENSE.txt', 'META-INF/license.txt', 'META-INF/NOTICE', 'META-INF/NOTICE.txt', 'META-INF/notice.txt', 'META-INF/ASL2.0']
        }
    }
    lint {
        abortOnError false
    }
}

detekt {
    ignoreFailures = true
    autoCorrect = true

    reports {
        xml.enabled = false
        txt.enabled = false
    }
}

configurations {
    all {
        exclude module: 'httpclient'
        exclude module: 'commons-logging'
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$Versions.kotlin"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$Versions.coroutines"
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
    implementation "androidx.appcompat:appcompat:$Versions.appcompat"
    implementation "androidx.core:core-ktx:$Versions.androidxCore"
    implementation "androidx.constraintlayout:constraintlayout:$Versions.constraintLayout"
    implementation "androidx.preference:preference-ktx:$Versions.preference"
    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.0'

    implementation project(':domain')
    implementation project(':data')
    implementation project(':shared')

    implementation "androidx.room:room-ktx:$Versions.room"

    implementation "androidx.fragment:fragment-ktx:$Versions.fragment"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$Versions.lifecycle"

    implementation "androidx.navigation:navigation-fragment-ktx:$Versions.navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$Versions.navigation"

    implementation "com.google.android.material:material:$Versions.material"
    implementation 'cn.carbswang.android:NumberPickerView:1.2.0'

    implementation "com.github.PhilJay:MPAndroidChart:v$Versions.MPAndroidChart"
    implementation 'com.github.AppIntro:AppIntro:6.1.0'
    implementation "androidx.paging:paging-runtime-ktx:$Versions.paging"

    implementation platform("com.google.firebase:firebase-bom:$Versions.firebase")
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'

    implementation "androidx.work:work-runtime-ktx:$Versions.workManager"
    implementation 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'
    implementation 'androidx.hilt:hilt-work:1.0.0'
    kapt 'androidx.hilt:hilt-compiler:1.0.0'

    implementation "com.google.android.gms:play-services-auth:$Versions.playServicesAuth"

    implementation "com.google.http-client:google-http-client-gson:$Versions.googleHttpClient"
    implementation("com.google.api-client:google-api-client-android:$Versions.googleApiClient")
    implementation("com.google.apis:google-api-services-drive:$Versions.googleApiServices")

    implementation "com.google.dagger:hilt-android:$Versions.hilt"
    kapt "com.google.dagger:hilt-android-compiler:$Versions.hilt"
    kapt "androidx.hilt:hilt-compiler:1.0.0"

    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "io.mockk:mockk:$Versions.mockk"
    testImplementation "io.kotest:kotest-runner-junit5:$Versions.kotestJUnit5"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$Versions.coroutines"
    testImplementation project(":sharedTest")

    androidTestImplementation project(":sharedTest")
    androidTestImplementation 'tools.fastlane:screengrab:2.0.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    androidTestImplementation "com.google.dagger:hilt-android-testing:$Versions.hilt"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$Versions.hilt"
}

plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'io.gitlab.arturbosch.detekt' version '1.23.6'
    id 'kotlinx-serialization'
}

android {
    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }

    defaultConfig {
        minSdk App.minSdk
        compileSdk App.compileSdk
        targetSdk App.targetSdk

        testInstrumentationRunner "com.maxpoliakov.skillapp.data.CustomTestRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : 'true',
                        "room.expandProjection": 'true']
            }
        }
    }

    packagingOptions {
        resources {
            excludes += ['META-INF/LICENSE.md', 'META-INF/LICENSE-notice.md', 'META-INF/DEPENDENCIES', 'META-INF/LICENSE', 'META-INF/LICENSE.txt', 'META-INF/license.txt', 'META-INF/NOTICE', 'META-INF/NOTICE.txt', 'META-INF/notice.txt', 'META-INF/ASL2.0', 'META-INF/AL2.0', 'META-INF/LGPL2.1', 'META-INF/licenses/ASM']
        }
    }

    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }

    lint {
        abortOnError false
    }
    namespace 'com.maxpoliakov.skillapp.data'
}

kotlin {
    jvmToolchain 17
}

configurations {
    all {
        exclude module: 'httpclient'
        exclude module: 'commons-logging'

        resolutionStrategy {
            exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-debug"
        }
    }
}

detekt {
    ignoreFailures = true
    autoCorrect = true

    reports {
        xml.enabled = false
        txt.enabled = false
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$Versions.kotlin"
    implementation "androidx.core:core-ktx:$Versions.androidxCore"

    implementation project(':shared')
    implementation project(':domain')

    implementation "androidx.room:room-ktx:$Versions.room"
    implementation "androidx.room:room-paging:$Versions.room"
    kapt "androidx.room:room-compiler:$Versions.room"

    implementation("androidx.paging:paging-runtime-ktx:$Versions.paging") {
        exclude group: 'androidx.lifecycle'
    }
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$Versions.lifecycle"

    implementation("androidx.preference:preference-ktx:$Versions.preference") {
        exclude group: 'androidx.lifecycle'
    }
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$Versions.serialization"

    implementation "com.google.dagger:hilt-android:$Versions.hilt"
    kapt "com.google.dagger:hilt-android-compiler:$Versions.hilt"

    implementation "androidx.work:work-runtime-ktx:$Versions.workManager"
    implementation 'androidx.hilt:hilt-work:1.0.0'
    kapt 'androidx.hilt:hilt-compiler:1.0.0'

    implementation "androidx.documentfile:documentfile:$Versions.documentFile"

    testImplementation project(":sharedTest")
    testImplementation testFixtures(project(":domain"))

    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$Versions.kotlin"
    testImplementation 'androidx.test.ext:junit:1.1.3'
    testImplementation "io.mockk:mockk:$Versions.mockk"
    testImplementation "io.kotest:kotest-runner-junit5:$Versions.kotestJUnit5"
    testImplementation "io.kotest:kotest-framework-datatest:$Versions.kotestJUnit5"

    androidTestImplementation "androidx.room:room-testing:$Versions.room"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "androidx.work:work-testing:$Versions.workManager"
    androidTestImplementation "androidx.test:runner:$Versions.androidxTestRunner"
    androidTestImplementation "io.kotest:kotest-runner-junit5:$Versions.kotestJUnit5"
    androidTestImplementation "androidx.test.ext:junit:$Versions.androidJUnit"
    androidTestImplementation project(":sharedTest")
    androidTestImplementation "com.google.dagger:hilt-android-testing:$Versions.hilt"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$Versions.hilt"
}

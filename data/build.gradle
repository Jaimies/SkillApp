plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'

    id 'io.gitlab.arturbosch.detekt' version '1.5.0'
}

android {

    compileSdkVersion App.compileSdk
    buildToolsVersion '29.0.2'

    defaultConfig {

        minSdkVersion App.minSdk
        targetSdkVersion App.targetSdk
        versionCode App.versionCode
        versionName App.versionName
        testInstrumentationRunner = 'com.jdevs.timeo.TimeoTestRunner'

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : 'true',
                        "room.expandProjection": 'true']
            }
        }
    }

    kotlinOptions.jvmTarget = '1.8'
}

detekt {
    ignoreFailures = true
    autoCorrect = true

    reports {
        xml.enabled = false
        txt.enabled = false
    }
}

dependencies {

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$Versions.kotlin"

    // Play Auth
    implementation "com.google.android.gms:play-services-auth:$Versions.gmsAuth"

    // The domain layer and shared module
    implementation project(':shared')
    implementation project(':domain')

    // Room
    implementation "androidx.room:room-ktx:$Versions.room"
    kapt "androidx.room:room-compiler:$Versions.room"

    // Paging
    implementation "androidx.paging:paging-runtime-ktx:$Versions.paging"

    // Firebase
    implementation "com.google.firebase:firebase-auth:$Versions.auth"
    implementation "com.google.android.gms:play-services-auth:$Versions.gmsAuth"
    implementation "com.google.firebase:firebase-firestore:$Versions.firestore"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$Versions.coroutinesPlay"

    // Androidx Preference library
    implementation "androidx.preference:preference-ktx:$Versions.preference"

    // java.time.* backport for Android
    implementation "com.jakewharton.threetenabp:threetenabp:$Versions.threeTenABP"

    // For tests use default ThreeTenBP library
    testImplementation "org.threeten:threetenbp:$Versions.threeTenBP"

    // Dependency injection
    implementation "com.google.dagger:dagger:$Versions.dagger"
    kapt "com.google.dagger:dagger-compiler:$Versions.dagger"
}